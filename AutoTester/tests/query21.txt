108
cat: such that cases
3 - follows , Typed :: (known,unknown)
stmt s1,s2;
Select s2  such that Follows (4 , s2 );
5
5000
4 - follows* , Typed :: (known,unknown)
stmt s1,s2;
Select s2  such that Follows* (4 , s2 );
5,6,7,8,9,20,21
5000
5 - follows , Typed :: (unknown,known)
stmt s1,s2;
Select s1  such that Follows ( s1 ,9 );
8
5000
6 - follows* , Typed :: (unknown,known)
stmt s1,s2;
Select s1  such that Follows* ( s1 ,9 );
1,2,3,4,5,6,7,8
5000
7 - follows , Typed :: (unknown,unknown) //answer may be inaccurate        
stmt s1,s2;
Select s1  such that Follows ( s1 , s2 );
1,2,3,4,5,6,7,8,9,10,11,12,14,15,20,27,28,29,31,32,34,35,36,39,40,42,43,45,46
5000 
8 - follows* , Typed :: (unknown,unknown) //answer may be inaccurate        
stmt s1,s2;
Select s1  such that Follows* ( s1 , s2 );
1,2,3,4,5,6,7,8,9,10,11,12,14,15,20,27,28,29,31,32,34,35,36,39,40,42,43,45,46    
5000
9 - follows , Typed :: (unknown,unknown)//answer may be inaccurate        
stmt s1,s2;
Select s2  such that Follows ( s1 , s2 );
2,3,4,5,6,7,8,9,20,21,24,28,29,31,32,33,35,36,39,40,41,43,44,46,47          
5000
10 - follows* , Typed :: (unknown,unknown)//answer may be inaccurate        
stmt s1,s2;
Select s2  such that Follows* ( s1 , s2 );
2,3,4,5,6,7,8,9,20,21,24,28,29,31,32,33,35,36,39,40,41,43,44,46,47         
5000
11 - follows , Typed :: (unknown,unknown)//answer may be inaccurate        
stmt s1,s2;
Select s1  such that Follows ( s1 , s1 );

5000
12 - follows* , Typed :: (unknown,unknown)//answer may be inaccurate        
stmt s1,s2;
Select s1  such that Follows* ( s1 , s1 );

5000
15 - parent , Typed :: (known,unknown)
stmt s1,s2;
Select s2  such that Parent (9 , s2 );
10,19            
5000
16 - parent* , Typed :: (known,unknown)//answer may be inaccurate        
stmt s1,s2;
Select s2  such that Parent* (9 , s2 );
10,11,12,13,14,15,16,17,18,19            
5000
17 - parent , Typed :: (unknown,known)//answer may be inaccurate        
stmt s1,s2;
Select s1  such that Parent ( s1 ,14 );
10            
5000
18 - parent* , Typed :: (unknown,known)//answer may be inaccurate        
stmt s1,s2;
Select s1  such that Parent* ( s1 ,14 );
9,10            
5000
19 - parent , Typed :: (unknown,unknown)//answer may be inaccurate        
stmt s1,s2;
Select s1  such that Parent ( s1 , s2 );
9,10,12,14,16,21,24,29,36,44          
5000
20 - parent* , Typed :: (unknown,unknown)//answer may be inaccurate        
stmt s1,s2;
Select s1  such that Parent* ( s1 , s2 );
9,10,12,14,16,21,24,29,36,44            
5000
21 - parent , Typed :: (unknown,unknown)
stmt s1,s2;
Select s2  such that Parent ( s1 , s2 );
10,11,12,13,14,15,16,17,18,19,22,23,24,25,26,30,37,38,45,46,47
5000
22 - parent* , Typed :: (unknown,unknown)
stmt s1,s2;
Select s2  such that Parent* ( s1 , s2 );
10,11,12,13,14,15,16,17,18,19,22,23,24,25,26,30,37,38,45,46,47
5000
23 - parent , Typed :: (unknown,unknown)
stmt s1,s2;
Select s1  such that Parent ( s1 , s1 );

5000
24 - parent* , Typed :: (unknown,unknown)
stmt s1,s2;
Select s1  such that Parent* ( s1 , s1 );

5000
73 - uses , Typed :: (unknown_statement,known_variable)
stmt s1;
Select s1  such that Uses ( s1 , "apple" );
2,3,9,19,21,22,40
5000
74 - modifies , Typed :: (unknown_statement,known_variable)
stmt s1;
Select s1  such that Modifies ( s1 , "apple" );
1,20,32,39
5000
75 - uses , Typed :: (unknown_assignment,known_variable)
assign a1; 
Select a1  such that Uses ( a1 , "apple" );
2,3,19,22,40
5000
76 - modifies , Typed :: (unknown_assignment,known_variable)
assign a1; 
Select a1  such that Modifies ( a1 , "apple" );
1,20,32,39
5000
77 - uses , Typed :: (unknown_while,known_variable)
while w1;
Select w1  such that Uses ( w1 , "apple" );
9
5000
78 - modifies , Typed :: (unknown_while,known_variable)
while w1;
Select w1  such that Modifies ( w1 , "apple" );

5000
79 - uses , Typed :: (unknown_if,known_variable)
if i1;
Select i1  such that Uses ( i1 , "apple" );
21
5000
80 - modifies , Typed :: (unknown_if,known_variable)
if i1;
Select i1  such that Modifies ( i1 , "apple" );

5000
81 - uses , Typed :: (unknown_call,known_variable)
call c;
Select c  such that Uses ( c , "apple" );
31
5000
82 - modifies , Typed :: (unknown_call,known_variable)
call c;
Select c  such that Modifies ( c , "apple" );
8,31
5000
83 - uses , Typed :: (unknown_procedure,known_variable)
procedure p;
Select p  such that Uses ( p , "apple" );
xylo,zebra
5000
84 - modifies , Typed :: (unknown_procedure,known_variable)
procedure p;
Select p  such that Modifies ( p , "apple" );
xylo,yello,zebra
5000
85 - uses , Typed :: (known_statement,unknown_variable)
variable v1;
Select v1  such that Uses (22 , v1 );
apple
5000
86 - modifies , Typed :: (known_statement,unknown_variable)
variable v1;
Select v1  such that Modifies (22 , v1 );
jam
5000
87 - uses , Typed :: (known_assignment,unknown_variable)
variable v1;
Select v1  such that Uses (13 , v1 );
egg
5000
88 - modifies , Typed :: (known_assignment,unknown_variable)
variable v1;
Select v1  such that Modifies (13 , v1 );
gummy
5000
89 - uses , Typed :: (known_while,unknown_variable)
variable v1;
Select v1  such that Uses (10 , v1 );
egg,donut,fish,innard
5000
90 - modifies , Typed :: (known_while,unknown_variable)
variable v1;
Select v1  such that Modifies (10 , v1 );
innard,gummy,fish
5000
91 - uses , Typed :: (known_if,unknown_variable)
variable v1;
Select v1  such that Uses (21 , v1 );
innard,apple,gummy,egg
5000
92 - modifies , Typed :: (known_if,unknown_variable)
variable v1;
Select v1  such that Modifies (21 , v1 );
jam,gummy
5000
93 - uses , Typed :: (known_call,unknown_variable)
variable v1;
Select v1  such that Uses (8 , v1 );
leek,kimchi,egg,meat,banana,apple,ingredients,a,b,c
5000
94 - modifies , Typed :: (known_call,unknown_variable)
variable v1;
Select v1  such that Modifies (8 , v1 );
kimchi,leek,apple,jam,meat,banana,carrot,ingredients,a,b,c
5000
95 - uses , Typed :: (known_procedure,unknown_variable)
variable v1;
Select v1  such that Uses ( "xylo" , v1 );
apple,carrot,egg,donut,fish,gummy,leek,kimchi,meat,banana,ingredients,a,b,c
5000
96 - modifies , Typed :: (known_procedure,unknown_variable)
variable v1;
Select v1  such that Modifies ( "xylo" , v1 );
apple,banana,carrot,donut,egg,fish,innard,gummy,ham,jam,kimchi,leek,meat,ingredients,a,b,c
5000
97 - uses , Typed :: (unknown_statement,unknown_variable)
stmt s1; variable v1;
Select s1  such that Uses ( s1 , v1 );
2,3,4,7,8,9,10,12,13,14,16,17,18,19,21,22,23,24,29,30,31,32,33,35,36,37,38,40,41,43,44,45,46,47
5000
98 - modifies , Typed :: (unknown_statement,unknown_variable)
stmt s1; variable v1;
Select v1  such that Modifies ( s1 , v1 );
apple,banana,carrot,dunut,egg,fish,gummy,ham,innard,jam,kimchi,leek,meat,ingredients,a,b,c
5000
99 - uses , Typed :: (unknown_assignment,unknown_variable)
assign a1; variable v1;
Select v1  such that Uses ( a1 , v1 );
apple,carrot,egg,innard,gummy,kimchi,meat,banana,ingredients,a,b,c
5000
100 - modifies , Typed :: (unknown_assignment,unknown_variable)
assign a1; variable v1;
Select a1  such that Modifies ( a1 , v1 );
1,2,3,4,5,6,7,11,13,15,17,18,19,20,22,23,25,26,27,28,30,32,33,34,35,37,38,39,40,42,43,45,46,47
5000
101 - uses , Typed :: (unknown_while,unknown_variable)
while w1; variable v1;
Select v1  such that Uses ( w1 , v1 );
apple,egg,donut,fish,innard,gummy,kimchi,ingredients,leek,a,b,c
5000
102 - modifies , Typed :: (unknown_while,unknown_variable)
while w1; variable v1;
Select w1  such that Modifies ( w1 , v1 );
9,10,12,14,16,29,44
5000
103 - uses , Typed :: (unknown_if,unknown_variable)
if i1; variable v1;
Select i1  such that Uses ( i1 , v1 );
21,24,36
5000
104 - modifies , Typed :: (unknown_if,unknown_variable)
if i1; variable v1;
Select v1  such that Modifies ( i1 , v1 );
jam,gummy,carrot
5000
105 - uses , Typed :: (unknown_call,unknown_variable)
call c; variable v1;
Select c  such that Uses ( c , v1 );
8,31,41
5000
106 - modifies , Typed :: (unknown_call,unknown_variable)
call c; variable v1;
Select v1  such that Modifies ( c , v1 );
kimchi,leek,apple,jam,meat,banana,carrot,ingredients,a,b,c
5000
107 - uses , Typed :: (unknown_procedure,unknown_variable)
procedure p1; variable v1;
Select p1  such that Uses ( p1 , v1 );
xylo,yello,zebra,extra
5000
108 - modifies , Typed :: (unknown_procedure,unknown_variable)
procedure p1; variable v1;
Select v1  such that Modifies ( p1 , v1 );
apple,banana,carrot,donut,egg,fish,gummy,ham,innard,jam,kimchi,leek,meat,ingredients,a,b,c
5000
